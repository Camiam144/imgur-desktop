# This should change my desktop background to today's top wallpaper post from imgur.# Hopefully I'll also learn some coding stuff.import urllib.requestimport jsonimport randomdef main():    max_papers = 25    wallpapers = 'http://www.reddit.com/r/wallpapers/top.json?t=week&limit=' + str(max_papers)    json_data = get_papers(wallpapers)    url = reddit_paper(json_data)    print(url)    get_from_imgur(url)def get_papers(wallpapers):    try:        response = urllib.request.urlopen(wallpapers)        content = response.read()        json_data = json.loads(content.decode('utf-8'))        return json_data    except urllib.request.URLError as e:        print('Couldn\t reach reddit, error: ', e)# Generates a random number to determine which wallpaper to usedef randomgen(upper):    number = random.randrange(0, upper)    return number# define a function that navigates to the random wallpaper and check if it's from imgur.# input data must be in json formatdef reddit_paper(data, max_papers=25):    retry_count = 5    count = 0    while count < retry_count:        count += 1        number = randomgen(max_papers)        domain = data["data"]["children"][number]["data"]["domain"]        score = data["data"]["children"][number]["data"]["score"]        if domain == 'i.imgur.com' and score >= 300:            wallpaper_url = data["data"]["children"][number]["data"]["url"]            return wallpaper_url        else:            print('Domain wrong or score too low, trying again %s/%d' % (count, retry_count))    print('Cannot find a suitable paper. This week has poor taste.')# takes a URL of the form i.imgur.com/xxxxxx.jpg and pulls the image from imgur if it exists.def get_from_imgur(input_url):    try:        rawdata = urllib.request.urlopen(input_url)        data = rawdata.read()        if len(data) > 0:            with open('wallpaper.jpg', 'wb') as out_file:                out_file.write(data)    except urllib.request.URLError as e:        print('Error, no image saved: ', e)if __name__ == '__main__':    main()